
Project: "kennings1"

"*":
  LinkifyFixedText: "y"
  LowerCaseFixedText: "y"
  UpperCaseSelectedText: "n"
  Templates: {
    "alt-ctrl-c°c°a": {
        Comment: "Character approximate end of repeated text start of number of repeats"
        InsertName: "Character Approximate"
        StringToInsert: "≈"
    }
    "alt-ctrl-c°c°d": {
        Comment: "Character 'Degrees' start of repeated text."
        InsertName: "Character Degrees"
        StringToInsert: "°"
    }
    "alt-ctrl-c°c°l": {
        Comment: "Character hollow left triangle, end of filename"
        InsertName: "Character Left Triangle"
        StringToInsert: "◁"
    }
    "alt-ctrl-c°c°q": {
        Comment: "Character reverse quote enod of number of repeats"
        InsertName: "Character Reverse Question"
        StringToInsert: "؟"
    }
    "alt-ctrl-c°c°r": {
        Comment: "Character hollow right triangle, start of filename"
        InsertName: "Character Right Triangle"
        StringToInsert: "▷"
    }
    "alt-ctrl-c°n°l": {
        Comment: "Character newline"
        InsertName: "New Line"
        StringToInsert: "%N%"
    }
    "alt-ctrl-c°q°d": {
        Comment: "Character quote double"
        InsertName: "Character Double quote"
        StringToInsert: "%Q%"
    }
    "alt-ctrl-m°0°a": {
        Comment: "Mark 0 all, up and down order lines"
        InsertName: "Mark 0 all"
        StringToInsert: "\#%R%° ⟰0≈80؟%N%\#%R%° 0⟱≈80؟"
    }
    "alt-ctrl-m°0°b": {
        Comment: "Mark 0 both, down and up order lines"
        InsertName: "Mark 0 both"
        StringToInsert: "\#%R%° 0⟱≈80؟%N%%ST%%C%pass%N%\#%R%° ⟰0≈80؟"
    }
    "alt-ctrl-m°0°e": {
        Comment: "Mark 0 end (up arrows)"
        InsertName: "Mark 0 end"
        StringToInsert: "\#%R%° ⟰0≈80؟"
    }
    "alt-ctrl-m°0°m": {
        Comment: "Mark 0 middle, up and down together"
        InsertName: "Mark 0 middle"
        StringToInsert: "\#%R%° ⟰0⟱≈56؟"
    }
    "alt-ctrl-m°0°s": {
        Comment: "Mark 0 start (down arrows)"
        InsertName: "Mark 0 start"
        StringToInsert: "\#%R%° 0⟱≈80؟"
    }
    "alt-ctrl-m°0°x": {
        Comment: "Mark 0 extended, down, middle, and up lines"
        InsertName: "Mark 0 extended"
        StringToInsert: "\#%R%° 0⟱≈80؟%N%%ST%%C%pass%N%\#%R%° ⟰0⟱≈56؟%N%pass%N%\#%R%° ⟰0≈80؟"
    }
    "alt-ctrl-m°1°a": {
        Comment: "Mark 1 all, up and down order lines"
        InsertName: "Mark 1 all"
        StringToInsert: "\#%R%° ⟰1≈80؟%N%\#%R%° 1⟱≈80؟"
    }
    "alt-ctrl-m°1°b": {
        Comment: "Mark 1 both, down and up order lines"
        InsertName: "Mark 1 both"
        StringToInsert: "\#%R%° 1⟱≈80؟%N%%ST%%C%pass%N%\#%R%° ⟰1≈80؟"
    }
    "alt-ctrl-m°1°e": {
        Comment: "Mark 1 end, (up arrows)"
        InsertName: "Mark 1 both"
        StringToInsert: "\#%R%° ⟰1≈80؟"
    }
    "alt-ctrl-m°1°m": {
        Comment: "Mark 1 middle, up and down together"
        InsertName: "Mark 1 middle"
        StringToInsert: "\#%R%° ⟰1⟱≈56؟"
    }
    "alt-ctrl-m°1°s": {
        Comment: "Mark 1 start (down arrows)"
        InsertName: "Mark 1 start"
        StringToInsert: "\#%R%° 1⟱≈80؟"
    }
    "alt-ctrl-m°1°x": {
        Comment: "Mark 1 extended, down, middle, and up lines"
        InsertName: "Mark 1 extended"
        StringToInsert: "\#%R%° 1⟱≈80؟%N%%ST%%C%pass%N%\#%R%° ⟰1⟱≈56؟%N%pass%N%\#%R%° ⟰1≈80؟"
    }
    "alt-ctrl-m°2°a": {
        Comment: "Mark 2 all, up and down order lines"
        InsertName: "Mark20 all"
        StringToInsert: "\#%R%° ⟰2≈80؟%N%\#%R%° 2⟱≈80؟"
    }
    "alt-ctrl-m°2°b": {
        Comment: "Mark 2 both, down and up order lines"
        InsertName: "Mark 2 both"
        StringToInsert: "\#%R%° 2⟱≈80؟%N%%ST%%C%pass%N%\#%R%° ⟰2≈80؟"
    }
    "alt-ctrl-m°2°e": {
        Comment: "Mark 2 end (up arrows)"
        InsertName: "Mark 2 end"
        StringToInsert: "\#%R%° ⟰2≈80؟"
    }
    "alt-ctrl-m°2°m": {
        Comment: "Mark 2 middle, up and down together"
        InsertName: "Mark 2 middle"
        StringToInsert: "\#%R%° ⟰2⟱≈56؟"
    }
    "alt-ctrl-m°2°s": {
        Comment: "Mark 2 start (down arrows)"
        InsertName: "Mark 2 start"
        StringToInsert: "\#%R%° 2⟱≈80؟"
    }
    "alt-ctrl-m°2°x": {
        Comment: "Mark 2 extended, down, middle, and up lines"
        InsertName: "Mark 2 extended"
        StringToInsert: "\#%R%° 2⟱≈80؟%N%%ST%%C%pass%N%\#%R%° ⟰2⟱≈56؟%N%pass%N%\#%R%° ⟰2≈80؟"
    }
    "alt-ctrl-m°3°a": {
        Comment: "Mark 3 all, up and down order lines"
        InsertName: "Mark30 all"
        StringToInsert: "\#%R%° ⟰3≈80؟%N%\#%R%° 3⟱≈80؟"
    }
    "alt-ctrl-m°3°b": {
        Comment: "Mark 3 both, down and up order lines"
        InsertName: "Mark 3 both"
        StringToInsert: "\#%R%° 3⟱≈80؟%N%%ST%%C%pass%N%\#%R%° ⟰3≈80؟"
    }
    "alt-ctrl-m°3°e": {
        Comment: "Mark 3 end (up arrows)"
        InsertName: "Mark 3 end"
        StringToInsert: "\#%R%° ⟰3≈80؟"
    }
    "alt-ctrl-m°3°m": {
        Comment: "Mark 3 middle, up and down together"
        InsertName: "Mark 3 middle"
        StringToInsert: "\#%R%° ⟰3⟱≈56؟"
    }
    "alt-ctrl-m°3°s": {
        Comment: "Mark 3 start (down arrows)"
        InsertName: "Mark 3 start"
        StringToInsert: "\#%R%° 3⟱≈80؟"
    }
    "alt-ctrl-m°3°x": {
        Comment: "Mark 3 extended, down, middle, and up lines"
        InsertName: "Mark 3 extended"
        StringToInsert: "\#%R%° 3⟱≈80؟%N%%ST%%C%pass%N%\#%R%° ⟰3⟱≈56؟%N%pass%N%\#%R%° ⟰3≈80؟"
    }
    "alt-ctrl-m°4°a": {
        Comment: "Mark 4 all, up and down order lines"
        InsertName: "Mark40 all"
        StringToInsert: "\#%R%° ⟰4≈80؟%N%\#%R%° 4⟱≈80؟"
    }
    "alt-ctrl-m°4°b": {
        Comment: "Mark 4 both, down and up order lines"
        InsertName: "Mark 4 both"
        StringToInsert: "\#%R%° 4⟱≈80؟%N%%ST%%C%pass%N%\#%R%° ⟰4≈80؟"
    }
    "alt-ctrl-m°4°e": {
        Comment: "Mark 4 end (up arrows)"
        InsertName: "Mark 4 end"
        StringToInsert: "\#%R%° ⟰4≈80؟"
    }
    "alt-ctrl-m°4°m": {
        Comment: "Mark 4 middle, up and down together"
        InsertName: "Mark 4 middle"
        StringToInsert: "\#%R%° ⟰4⟱≈56؟"
    }
    "alt-ctrl-m°4°s": {
        Comment: "Mark 4 start (down arrows)"
        InsertName: "Mark 4 start"
        StringToInsert: "\#%R%° 4⟱≈80؟"
    }
    "alt-ctrl-m°4°x": {
        Comment: "Mark 4 extended, down, middle, and up lines"
        InsertName: "Mark 4 extended"
        StringToInsert: "\#%R%° 4⟱≈80؟%N%%ST%%C%pass%N%\#%R%° ⟰4⟱≈56؟%N%pass%N%\#%R%° ⟰4≈80؟"
    }
    "alt-ctrl-m°5°a": {
        Comment: "Mark 5 all, up and down order lines"
        InsertName: "Mark50 all"
        StringToInsert: "\#%R%° ⟰5≈80؟%N%\#%R%° 5⟱≈80؟"
    }
    "alt-ctrl-m°5°b": {
        Comment: "Mark 5 both, down and up order lines"
        InsertName: "Mark 5 both"
        StringToInsert: "\#%R%° 5⟱≈80؟%N%%ST%%C%pass%N%\#%R%° ⟰5≈80؟"
    }
    "alt-ctrl-m°5°e": {
        Comment: "Mark 5 end (up arrows)"
        InsertName: "Mark 5 end"
        StringToInsert: "\#%R%° ⟰5≈80؟"
    }
    "alt-ctrl-m°5°m": {
        Comment: "Mark 5 middle, up and down together"
        InsertName: "Mark 5 middle"
        StringToInsert: "\#%R%° ⟰5⟱≈56؟"
    }
    "alt-ctrl-m°5°s": {
        Comment: "Mark 5 start (down arrows)"
        InsertName: "Mark 5 start"
        StringToInsert: "\#%R%° 5⟱≈80؟"
    }
    "alt-ctrl-m°5°x": {
        Comment: "Mark 5 extended, down, middle, and up lines"
        InsertName: "Mark 5 extended"
        StringToInsert: "\#%R%° 5⟱≈80؟%N%%ST%%C%pass%N%\#%R%° ⟰5⟱≈56؟%N%pass%N%\#%R%° ⟰5≈80؟"
    }
    "alt-ctrl-m°6°a": {
        Comment: "Mark 6 all, up and down order lines"
        InsertName: "Mark60 all"
        StringToInsert: "\#%R%° ⟰6≈80؟%N%\#%R%° 6⟱≈80؟"
    }
    "alt-ctrl-m°6°b": {
        Comment: "Mark 6 both, down and up order lines"
        InsertName: "Mark 6 both"
        StringToInsert: "\#%R%° 6⟱≈80؟%N%%ST%%C%pass%N%\#%R%° ⟰6≈80؟"
    }
    "alt-ctrl-m°6°e": {
        Comment: "Mark 6 end (up arrows)"
        InsertName: "Mark 6 end"
        StringToInsert: "\#%R%° ⟰6≈80؟"
    }
    "alt-ctrl-m°6°m": {
        Comment: "Mark 6 middle, up and down together"
        InsertName: "Mark 6 middle"
        StringToInsert: "\#%R%° ⟰6⟱≈56؟"
    }
    "alt-ctrl-m°6°s": {
        Comment: "Mark 6 start (down arrows)"
        InsertName: "Mark 6 start"
        StringToInsert: "\#%R%° 6⟱≈80؟"
    }
    "alt-ctrl-m°6°x": {
        Comment: "Mark 6 extended, down, middle, and up lines"
        InsertName: "Mark 6 extended"
        StringToInsert: "\#%R%° 6⟱≈80؟%N%%ST%%C%pass%N%\#%R%° ⟰6⟱≈56؟%N%pass%N%\#%R%° ⟰6≈80؟"
    }
    "alt-ctrl-m°7°a": {
        Comment: "Mark 7 all, up and down order lines"
        InsertName: "Mark70 all"
        StringToInsert: "\#%R%° ⟰7≈80؟%N%\#%R%° 7⟱≈80؟"
    }
    "alt-ctrl-m°7°b": {
        Comment: "Mark 7 both, down and up order lines"
        InsertName: "Mark 7 both"
        StringToInsert: "\#%R%° 7⟱≈80؟%N%%ST%%C%pass%N%\#%R%° ⟰7≈80؟"
    }
    "alt-ctrl-m°7°e": {
        Comment: "Mark 7 end (up arrows)"
        InsertName: "Mark 7 end"
        StringToInsert: "\#%R%° ⟰7≈80؟"
    }
    "alt-ctrl-m°7°m": {
        Comment: "Mark 7 middle, up and down together"
        InsertName: "Mark 7 middle"
        StringToInsert: "\#%R%° ⟰7⟱≈56؟"
    }
    "alt-ctrl-m°7°s": {
        Comment: "Mark 7 start (down arrows)"
        InsertName: "Mark 7 start"
        StringToInsert: "\#%R%° 7⟱≈80؟"
    }
    "alt-ctrl-m°7°x": {
        Comment: "Mark 7 extended, down, middle, and up lines"
        InsertName: "Mark 7 extended"
        StringToInsert: "\#%R%° 7⟱≈80؟%N%%ST%%C%pass%N%\#%R%° ⟰7⟱≈56؟%N%pass%N%\#%R%° ⟰7≈80؟"
    }
    "alt-ctrl-m°8°a": {
        Comment: "Mark 8 all, up and down order lines"
        InsertName: "Mark80 all"
        StringToInsert: "\#%R%° ⟰8≈80؟%N%\#%R%° 8⟱≈80؟"
    }
    "alt-ctrl-m°8°b": {
        Comment: "Mark 8 both, down and up order lines"
        InsertName: "Mark 8 both"
        StringToInsert: "\#%R%° 8⟱≈80؟%N%%ST%%C%pass%N%\#%R%° ⟰8≈80؟"
    }
    "alt-ctrl-m°8°e": {
        Comment: "Mark 8 end (up arrows)"
        InsertName: "Mark 8 end"
        StringToInsert: "\#%R%° ⟰8≈80؟"
    }
    "alt-ctrl-m°8°m": {
        Comment: "Mark 8 middle, up and down together"
        InsertName: "Mark 8 middle"
        StringToInsert: "\#%R%° ⟰8⟱≈56؟"
    }
    "alt-ctrl-m°8°s": {
        Comment: "Mark 8 start (down arrows)"
        InsertName: "Mark 8 start"
        StringToInsert: "\#%R%° 8⟱≈80؟"
    }
    "alt-ctrl-m°8°x": {
        Comment: "Mark 8 extended, down, middle, and up lines"
        InsertName: "Mark 8 extended"
        StringToInsert: "\#%R%° 8⟱≈80؟%N%%ST%%C%pass%N%\#%R%° ⟰8⟱≈56؟%N%pass%N%\#%R%° ⟰8≈80؟"
    }
    "alt-ctrl-m°9°a": {
        Comment: "Mark 9 all, up and down order lines"
        InsertName: "Mark90 all"
        StringToInsert: "\#%R%° ⟰9≈80؟%N%\#%R%° 9⟱≈80؟"
    }
    "alt-ctrl-m°9°b": {
        Comment: "Mark 9 both, down and up order lines"
        InsertName: "Mark 9 both"
        StringToInsert: "\#%R%° 9⟱≈80؟%N%%ST%%C%pass%N%\#%R%° ⟰9≈80؟"
    }
    "alt-ctrl-m°9°e": {
        Comment: "Mark 9 end (up arrows)"
        InsertName: "Mark 9 end"
        StringToInsert: "\#%R%° ⟰9≈80؟"
    }
    "alt-ctrl-m°9°m": {
        Comment: "Mark 9 middle, up and down together"
        InsertName: "Mark 9 middle"
        StringToInsert: "\#%R%° ⟰9⟱≈56؟"
    }
    "alt-ctrl-m°9°s": {
        Comment: "Mark 9 start (down arrows)"
        InsertName: "Mark 9 start"
        StringToInsert: "\#%R%° 9⟱≈80؟"
    }
    "alt-ctrl-m°9°x": {
        Comment: "Mark 9 extended, down, middle, and up lines"
        InsertName: "Mark 9 extended"
        StringToInsert: "\#%R%° 9⟱≈80؟%N%%ST%%C%pass%N%\#%R%° ⟰9⟱≈56؟%N%pass%N%\#%R%° ⟰9≈80؟"
    }
    "alt-ctrl-m°b°c": {
        Comment: "Block Comment"
        InsertName: "Python Block Comment"
        StringToInsert: "\# * %R%°\#*≈150؟%N%\# * %C%%N%\# * %R%°\#*≈150؟%N%%ST%"
    }
    "alt-ctrl-m°b°n": {
        Comment: "Mark block note"
        InsertName: "Mark Block Note"
        StringToInsert: "\# *** NOTE *** %R%°%⟱_≈56؟%N%\# * %ST%%C%%N%\# *** NOTE *** %R%°%⟰_≈56؟%N%"
    }
    "alt-ctrl-m°c°b": {
        Comment: "Comment block"
        InsertName: "Python comment block"
        StringToInsert: "\# * %R%°\#*≈150؟%N%\# * Start of __NAME__%N%\# * %R%°\#*≈150؟%N%%ST%\# * %R%°\#*≈150؟%N%\# * End of __NAME__%N%\# * %R%°\#*≈150؟%N%"
    }
    "alt-ctrl-m°c°c": {
        Comment: "Generic comment starter"
        InsertName: "Hash Comment"
        StringToInsert: "\# * "
    }
    "alt-ctrl-m°c°t": {
        Comment: "Comment block, tall edition"
        InsertName: "Tall comment block"
        StringToInsert: "\# *****%N%\# R%°*≈10؟%N%\# R%°*≈20؟%N%\# R%°*≈40؟\# * %R%°\#*≈150؟%N%\# * Start of __NAME__%N%\# * %R%°\#*≈150؟%N%%ST%\# * %R%°\#*≈150؟%N%\# * End of __NAME__%N%\# * %R%°\#*≈150؟%N%\# *****%N%\# R%°*≈10؟%N%\# R%°*≈20؟%N%\# R%°*≈40؟%N%"
    }
    "alt-ctrl-m°i°l": {
        Comment: "Mark info line"
        InsertName: "Mark Info Line"
        StringToInsert: "\# *** INFO *** %R%°%⟱_≈56؟"
    }
    "alt-ctrl-m°n°a": {
        Comment: "Mark nothing all up, down order."
        InsertName: "Mark Nothing All"
        StringToInsert: "\# %R%°⟰_≈56؟%N%%R%°⟱_≈56؟%N%"
    }
    "alt-ctrl-m°n°b": {
        Comment: "Mark nothing both down, up arrows."
        InsertName: "Mark Nothing Both"
        StringToInsert: "\# %R%°⟱_≈56؟%N%%C%%N%\# %R%°⟰_≈56؟%N%"
    }
    "alt-ctrl-m°n°d": {
        Comment: "Mark not diagnostic comment line"
        InsertName: "Not Diagnostic"
        StringToInsert: "\# *** NOT DIAGNOSTIC ***  %R%°%⟱_≈56؟"
    }
    "alt-ctrl-m°n°e": {
        Comment: "Mark nothing end, (up arrows)."
        InsertName: "Mark Nothing End"
        StringToInsert: "\# %R%°⟰_≈56؟%N%"
    }
    "alt-ctrl-m°n°m": {
        Comment: "Mark nothing middle, up and down arrows"
        InsertName: "Mark Nothing Middle"
        StringToInsert: "\# %R%°⟰⟱≈56؟%N%"
    }
    "alt-ctrl-m°n°s": {
        Comment: "Mark nothing start, down arrows"
        InsertName: "Mark Not Diagnostic"
        StringToInsert: "\# %R%°⟱_≈56؟%N%"
    }
    "alt-shift-s°p": {
        Comment: "Shebang python"
        InsertName: "Shebang Python"
        StringToInsert: "\#!/usr/bin/env /usr/bin/python%N%%N%%N%\#"
    }
    "alt-shift-s°z": {
        Comment: "Shebang zsh"
        InsertName: "Shebang Zsh"
        StringToInsert: "\#/!usr/bin/env /usr/bin/zsh%N%%N%%N%\#"
    }
  }

"source.arduino":
  LinkifyFixedText: "y"
  LowerCaseFixedText: "y"
  UpperCaseSelectedText: "n"
  Templates: {
    "alt-ctrl-d°c°c": {
        Comment: "Define class class"
        InsertName: "Python class template"
        StringToInsert: " * %R%°*≈50؟%N% * Start of %ST%%N% * %R%°*≈50؟%N%class %ST%():%N%%T% fold here %R%°⟱1≈100؟%N%%T%def __init__(self, __PARMS__)%N%%T%%T%%C%pass%N%%N%%T% fold here %R%°⟰1≈100؟%N% * %R%°*≈50؟%N% * End of %ST%%N% * %R%°*≈50؟%N%"
    }
    "alt-ctrl-d°c°f": {
        Comment: "Define class function"
        InsertName: "Python class function template"
        StringToInsert: " * %R%°*≈50؟%N% * Start of %ST%%N% * %R%°*≈50؟%N%def %ST%(self, __PARMS__):%N%%T% fold here %R%°⟱2≈50؟%N%%T%%C%pass%N%%T% fold here %R%°⟰2≈50؟%N% * %R%°*≈50؟%N% * End of %ST%%N% * %R%°*≈50؟%N%"
    }
    "alt-ctrl-d°i°e": {
        Comment: "Define if elif"
        InsertName: "Python elif"
        StringToInsert: "elif (%N%%T%%T%(%ST%%C%)%N%):%N%%T%pass"
    }
    "alt-ctrl-d°i°i": {
        Comment: "Define if if"
        InsertName: "Python if"
        StringToInsert: "if (%N%%T%%T%(%ST%%C%)%N%):%N%%T%pass"
    }
    "alt-ctrl-d°i°s": {
        Comment: "Define if else"
        InsertName: "Python else"
        StringToInsert: "else:%N%%T%pass"
    }
    "alt-ctrl-d°n°f": {
        Comment: "Define normal function"
        InsertName: "Python function template"
        StringToInsert: " * %R%°*≈50؟%N% * Start of %ST%%N% * %R%°*≈50؟%N%def %ST%(__PARMS__):%N%%T% fold here %R%°⟱1≈50؟%N%%T%%C%pass%N%%T% fold here %R%°⟰1≈50؟%N% * %R%°*≈50؟%N% * End of %ST%%N% * %R%°*≈50؟%N%%N%"
    }
    "alt-ctrl-m°b°c": {
        Comment: "Block Comment"
        InsertName: "Python Block Comment"
        StringToInsert: "// * %R%°//*≈50؟%N%// * %C%%N%// * %R%°//*≈50؟%N%%ST%"
    }
    "alt-ctrl-m°b°n": {
        Comment: "Mark block note"
        InsertName: "Mark Block Note"
        StringToInsert: "// *** NOTE *** %R%°%⟱_≈16؟%N%// * %ST%%C%%N%// *** NOTE *** %R%°%⟰_≈16؟%N%"
    }
    "alt-ctrl-m°c°b": {
        Comment: "Comment block"
        InsertName: "Python comment block"
        StringToInsert: " * %R%°*≈50؟%N% * Start of __NAME__%N% * %R%°*≈50؟%N%%ST% * %R%°*≈50؟%N% * End of __NAME__%N% * %R%°*≈50؟%N%"
    }
    "alt-ctrl-m°c°c": {
        Comment: "Generic comment starter"
        InsertName: "Hash Comment"
        StringToInsert: " * "
    }
    "alt-ctrl-m°c°t": {
        Comment: "Comment block, tall edition"
        InsertName: "Tall comment block"
        StringToInsert: " *****%N% R%°*≈10؟%N% R%°*≈20؟%N% R%°*≈40؟ * %R%°*≈50؟%N% * Start of __NAME__%N% * %R%°*≈50؟%N%%ST% * %R%°*≈50؟%N% * End of __NAME__%N% * %R%°*≈50؟%N% *****%N% R%°*≈10؟%N% R%°*≈20؟%N% R%°*≈40؟%N%"
    }
    "alt-ctrl-m°i°l": {
        Comment: "Mark info line"
        InsertName: "Mark Info Line"
        StringToInsert: " *** INFO *** %R%°%⟱_≈16؟"
    }
    "alt-ctrl-m°n°a": {
        Comment: "Mark nothing all up, down order."
        InsertName: "Mark Nothing All"
        StringToInsert: " %R%°⟰_≈16؟%N%%R%°⟱_≈16؟%N%"
    }
    "alt-ctrl-m°n°b": {
        Comment: "Mark nothing both down, up arrows."
        InsertName: "Mark Nothing Both"
        StringToInsert: " %R%°⟱_≈16؟%N%%C%%N% %R%°⟰_≈16؟%N%"
    }
    "alt-ctrl-m°n°d": {
        Comment: "Mark not diagnostic comment line"
        InsertName: "Not Diagnostic"
        StringToInsert: " *** NOT DIAGNOSTIC ***  %R%°%⟱_≈16؟"
    }
    "alt-ctrl-m°n°e": {
        Comment: "Mark nothing end, (up arrows)."
        InsertName: "Mark Nothing End"
        StringToInsert: " %R%°⟰_≈16؟%N%"
    }
    "alt-ctrl-m°n°m": {
        Comment: "Mark nothing middle, up and down arrows"
        InsertName: "Mark Nothing Middle"
        StringToInsert: " %R%°⟰⟱≈16؟%N%"
    }
    "alt-ctrl-m°n°s": {
        Comment: "Mark nothing start, down arrows"
        InsertName: "Mark Not Diagnostic"
        StringToInsert: " %R%°⟱_≈16؟%N%"
    }
  }

"source.python":
  LinkifyFixedText: "y"
  LowerCaseFixedText: "y"
  UpperCaseSelectedText: "n"
  Templates: {
    "alt-ctrl-c°c°c": {
        Comment: "Character DBLQT from CF_V"
        InsertName: "Character Double quote"
        StringToInsert: "{V.CF_V.DBLQT}"
    }
    "alt-ctrl-c°d°c": {
        Comment: "Character DBLQT from CF_V"
        InsertName: "Character Double quote"
        StringToInsert: "{V.CF_V.DBLQT}"
    }
    "alt-ctrl-c°n°c": {
        Comment: "Character NEWLINE from CF_V"
        InsertName: "Python else"
        StringToInsert: "{V.CF_V.NEWLINE}"
    }
    "alt-ctrl-d°c°c": {
        Comment: "Define class class"
        InsertName: "Python class template"
        StringToInsert: "\# * %R%°\#*≈150؟%N%\# * Start of %ST%%N%\# * %R%°\#*≈150؟%N%class %ST%():%N%%T%\# fold here %R%°⟱1≈100؟%N%%T%def __init__(self, __PARMS__)%N%%T%%T%%C%pass%N%%N%%T%\# fold here %R%°⟰1≈100؟%N%\# * %R%°\#*≈150؟%N%\# * End of %ST%%N%\# * %R%°\#*≈150؟%N%"
    }
    "alt-ctrl-d°c°f": {
        Comment: "Define class function"
        InsertName: "Python class function template"
        StringToInsert: "\# * %R%°\#*≈150؟%N%\# * Start of %ST%%N%\# * %R%°\#*≈150؟%N%def %ST%(self, __PARMS__):%N%%T%\# fold here %R%°⟱2≈150؟%N%%T%%C%pass%N%%T%\# fold here %R%°⟰2≈150؟%N%\# * %R%°\#*≈150؟%N%\# * End of %ST%%N%\# * %R%°\#*≈150؟%N%"
    }
    "alt-ctrl-d°f°d": {
        Comment: "Define dict for loop"
        InsertName: "Python dict for template"
        StringToInsert: "for _key_, _val_ in _DICT_.items():%N%%T%%ST%%C%pass"
    }
    "alt-ctrl-d°f°f": {
        Comment: "Define normal for loop"
        InsertName: "Python for template"
        StringToInsert: "for _VAR_ in _ITERABLE_:%N%%T%%ST%%C%pass"
    }
    "alt-ctrl-d°i°e": {
        Comment: "Define if elif"
        InsertName: "Python elif"
        StringToInsert: "elif (%N%%T%%T%(%ST%%C%)%N%):%N%%T%pass"
    }
    "alt-ctrl-d°i°i": {
        Comment: "Define if if"
        InsertName: "Python if"
        StringToInsert: "if (%N%%T%%T%(%ST%%C%)%N%):%N%%T%pass"
    }
    "alt-ctrl-d°i°s": {
        Comment: "Define if else"
        InsertName: "Python else"
        StringToInsert: "else:%N%%T%pass"
    }
    "alt-ctrl-d°n°f": {
        Comment: "Define normal function"
        InsertName: "Python function template"
        StringToInsert: "\# * %R%°\#*≈150؟%N%\# * Start of %ST%%N%\# * %R%°\#*≈150؟%N%def %ST%(__PARMS__):%N%%T%\# fold here %R%°⟱1≈150؟%N%%T%%C%pass%N%%T%\# fold here %R%°⟰1≈150؟%N%\# * %R%°\#*≈150؟%N%\# * End of %ST%%N%\# * %R%°\#*≈150؟%N%%N%"
    }
    "alt-ctrl-d°o°b": {
        Comment: "Define options boolean function"
        InsertName: "Python function template"
        StringToInsert: "\# * %R%°\#*≈150؟%N%\# * Start of %ST%%N%\# * %R%°\#*≈150؟%N%def %ST%():%N%%T%\# fold here %R%°⟱1≈150؟%%N%%T%return V.CF_OPT.V.O_CHOICES_MAKER(%N%%T%%T%%T%args_=[%N%%T%%T%%T%],%N%%T%%T%%T%dest_=%Q%_DEST_%Q%,%N%%T%%T%%T%help1_ = f%Q%%Q%%Q%%Q%%Q%%Q%,%N%%T%)%N%%T%\# fold here %R%°⟰1≈150؟%N%\# * %R%°\#*≈150؟%N%\# * End of %ST%%N%\# * %R%°\#*≈150؟%N%%N%%N%%N%"
    }
    "alt-ctrl-d°o°f": {
        Comment: "Define options function"
        InsertName: "Python function template"
        StringToInsert: "\# * %R%°\#*≈150؟%N%\# * Start of %ST%%N%\# * %R%°\#*≈150؟%N%def %ST%():%N%%T%\# fold here %R%°⟱1≈150؟%N%%T%_help_ = f%Q%%Q%%Q%%C%%Q%%Q%%Q%%N%%T%return {%N%%T%%T%%T%K_ARGS: [%N%%T%%T%%T%],%N%%T%%T%%T%K_KWARGS: {%N%%T%%T%%T%%T%%T%K_HELP: _help_,%N%%T%%T%%T%},%N%%T%}%N%%T%\# fold here %R%°⟰1≈150؟%N%\# * %R%°\#*≈150؟%N%\# * End of %ST%%N%\# * %R%°\#*≈150؟%N%%N%"
    }
    "alt-ctrl-f°1°b": {
        Comment: "Atom custom folds fold 1 both"
        InsertName: "Python fold 1 both"
        StringToInsert: "\# fold here %R%°⟱1≈150؟%N%%ST%%N%\# fold here %R%°⟰1≈150؟"
    }
    "alt-ctrl-f°1°e": {
        Comment: "Atom custom folds fold 1 end"
        InsertName: "Python fold 1 end"
        StringToInsert: "\# fold here %R%°⟰1≈150؟"
    }
    "alt-ctrl-f°1°s": {
        Comment: "Atom custom folds fold 1 start"
        InsertName: "Python fold 1 start"
        StringToInsert: "\# fold here %R%°⟱1≈150؟"
    }
    "alt-ctrl-f°2°b": {
        Comment: "Atom custom folds fold 2 both"
        InsertName: "Python fold 2 both"
        StringToInsert: "\# fold here %R%°⟱2≈150؟%N%%ST%%N%\# fold here %R%°⟰2≈150؟"
    }
    "alt-ctrl-f°2°e": {
        Comment: "Atom custom folds fold 2 end"
        InsertName: "Python fold 2 end"
        StringToInsert: "\# fold here %R%°⟰2≈150؟"
    }
    "alt-ctrl-f°2°s": {
        Comment: "Atom custom folds fold 2 start"
        InsertName: "Python fold 2 start"
        StringToInsert: "\# fold here %R%°⟱2≈150؟"
    }
    "alt-ctrl-f°3°b": {
        Comment: "Atom custom folds fold 3 both"
        InsertName: "Python fold 3 both"
        StringToInsert: "\# fold here %R%°⟱3≈150؟%N%%ST%%N%\# fold here %R%°⟰3≈150؟"
    }
    "alt-ctrl-f°3°e": {
        Comment: "Atom custom folds fold 3 end"
        InsertName: "Python fold 3 end"
        StringToInsert: "\# fold here %R%°⟰3≈150؟"
    }
    "alt-ctrl-f°3°s": {
        Comment: "Atom custom folds fold 3 start"
        InsertName: "Python fold 3 start"
        StringToInsert: "\# fold here %R%°⟱3≈150؟"
    }
    "alt-ctrl-p°e°d": {
        Comment: "Phrase empty _dictToRtn_"
        InsertName: "Empty _dictToRtn_"
        StringToInsert: "_dictToRtn_ = {}"
    }
    "alt-ctrl-p°e°l": {
        Comment: "Phrase empty _listToRtn_"
        InsertName: "Empty _listToRtn_"
        StringToInsert: "_listToRtn_ = []"
    }
    "alt-ctrl-p°e°p": {
        Comment: "Phrase empty print"
        InsertName: "Empty _strToRtn_"
        StringToInsert: "print(f%Q%%Q%%Q%%ST%%C%%Q%%Q%%Q%)"
    }
    "alt-ctrl-p°e°q": {
        Comment: "Phrase empty f-quotes"
        InsertName: "Empty F-Quote"
        StringToInsert: "f%Q%%Q%%Q%%ST%%C%%Q%%Q%%Q%"
    }
    "alt-ctrl-p°e°s": {
        Comment: "Phrase empty _strToRtn_"
        InsertName: "Empty _strToRtn_"
        StringToInsert: "_strToRtn_ = %Q%%Q%"
    }
    "alt-ctrl-p°e°t": {
        Comment: "Empty _tupToRtn_"
        InsertName: "Empty _tupToRtn_"
        StringToInsert: "_tupToRtn_ = ()"
    }
    "alt-ctrl-p°p°s": {
        Comment: "Phrase _strToRtn_ += FTQ"
        InsertName: "Empty _strToRtn_ += FTQ"
        StringToInsert: "_strToRtn_ += f%Q%%Q%%Q%%C%%Q%%Q%%Q%"
    }
    "alt-ctrl-p°q°r°s": {
        Comment: "Phrase return fquotes"
        InsertName: "Return Fquotes"
        StringToInsert: "return f%Q%%Q%%Q%%ST%%C%%Q%%Q%%Q%"
    }
    "alt-ctrl-p°q°s": {
        Comment: "Phrase equals empty fquotes"
        InsertName: "Equals Fquotes"
        StringToInsert: " = f%Q%%Q%%Q%%ST%%C%%Q%%Q%%Q%"
    }
    "alt-ctrl-p°r°d": {
        Comment: "Phrase return _dictToRtn_"
        InsertName: "Return _dictToRtn_"
        StringToInsert: "return _dictToRtn_"
    }
    "alt-ctrl-p°r°l": {
        Comment: "Phrase return _listToRtn_"
        InsertName: "Return _listToRtn_"
        StringToInsert: "return _listToRtn_"
    }
    "alt-ctrl-p°r°n": {
        Comment: "Return None"
        InsertName: "Return None"
        StringToInsert: "return None"
    }
    "alt-ctrl-p°r°s": {
        Comment: "Empty _strToRtn_"
        InsertName: "Empty _strToRtn_"
        StringToInsert: "return _strToRtn_"
    }
    "alt-ctrl-p°r°t": {
        Comment: "Empty _tupToRtn_"
        InsertName: "Empty _tupToRtn_"
        StringToInsert: "return _tupToRtn_"
    }
    "alt-ctrl-p°v°e": {
        Comment: "Throw error template"
        InsertName: "Error Template"
        StringToInsert: "_TStr_ = f%Q%%Q%%Q%%C%%Q%%Q%%Q%%N%V.CF_OS.throwError(%N%%T%%T%%T%%T%%T%message_=_TStr_,%N%%T%%T%%T%%T%%T%code_=2,%N%%T%%T%%T%)"
    }
    "alt-ctrl-p°v°s": {
        Comment: "Empty _TStr_"
        InsertName: "Empty _TStr_"
        StringToInsert: "_TStr_ = f%Q%%Q%%Q%%ST%%C%%Q%%Q%%Q%"
    }
  }

"source.shell":
  LinkifyFixedText: "y"
  LowerCaseFixedText: "y"
  UpperCaseSelectedText: "n"
  Templates: {
    "alt-ctrl-d°i°e": {
        Comment: "Define if elif"
        InsertName: "zsh elif"
        StringToInsert: "elif [[ %C% ]]%N%then%N%%T%%ST%"
    }
    "alt-ctrl-d°i°i": {
        Comment: "Define if if"
        InsertName: "zsh if"
        StringToInsert: "if [[ %C% ]]%N%then%N%%T%%ST%%N%fi"
    }
    "alt-ctrl-d°i°s": {
        Comment: "Define if else"
        InsertName: "zsh else"
        StringToInsert: "else%N%%T%"
    }
    "alt-ctrl-d°n°f": {
        Comment: "Define normal function"
        InsertName: "zsh function template"
        StringToInsert: "%ST%()%N%{%N%%T%%C%%N%}"
    }
  }

"text.md":
  LinkifyFixedText: "y"
  LowerCaseFixedText: "y"
  UpperCaseSelectedText: "n"
  Templates: {
    "alt-ctrl-f°r°0": {
        Comment: "File reference link in this file"
        InsertName: "Link to this"
        StringToInsert: "[%ST%](\#%FT%)"
    }
    "alt-ctrl-f°s°b": {
        Comment: "Bold"
        InsertName: "Markdown Bold"
        StringToInsert: "**%ST%**"
    }
    "alt-ctrl-f°s°h": {
        Comment: "Format selection highlight (bold italics)"
        InsertName: "Markdown Highlight"
        StringToInsert: "***%ST%***"
    }
    "alt-ctrl-f°s°i": {
        Comment: "Format selection italics"
        InsertName: "Markdown Italics"
        StringToInsert: "*%ST%*"
    }
    "alt-ctrl-f°s°o°h": {
        Comment: "Overstrike and highlight"
        InsertName: "Markdown Overstrike and Highlight"
        StringToInsert: "***~~%ST%~~***"
    }
    "alt-ctrl-f°s°o°o": {
        Comment: "Overstrike only"
        InsertName: "Markdown Overstrike"
        StringToInsert: "~~%ST%~~"
    }
  }

